{"metadata":{"kernelspec":{"name":"ir","display_name":"R","language":"R"},"language_info":{"name":"R","codemirror_mode":"r","pygments_lexer":"r","mimetype":"text/x-r-source","file_extension":".r","version":"4.0.5"}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"code","source":"# This R environment comes with many helpful analytics packages installed\n# It is defined by the kaggle/rstats Docker image: https://github.com/kaggle/docker-rstats\n# For example, here's a helpful package to load\n\nlibrary(tidyverse) # metapackage of all tidyverse packages\n\n# Input data files are available in the read-only \"../input/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nlist.files(path = \"../input\")\n\n# You can write up to 20GB to the current directory (/kaggle/working/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to /kaggle/temp/, but they won't be saved outside of the current session","metadata":{"_uuid":"051d70d956493feee0c6d64651c6a088724dca2a","_execution_state":"idle","execution":{"iopub.status.busy":"2022-08-15T04:53:14.606864Z","iopub.execute_input":"2022-08-15T04:53:14.608475Z","iopub.status.idle":"2022-08-15T04:53:14.628685Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"# 1. A description of all data sources used:\n\nThe data source was stored in KaggleÂ (public domain). It contains of 18 csv datasets of personal fitness tracker from thirty fitbit users, including calories, step rate, heart rate, sleep monitoring to understand users' habits. It is an open-source data as other people can copy, modify and edit the data, making it under copywriter law. It fits the ROCCC criteria except for the Current(data was in 2016, a little outdated). It can be tracked originally, are with comprehensive answers to the problem we are trying to solve, and are cited. Yet, there are a few datasets that contain less than 30 samples(Id), thus not representative of the population. I decide to exclude those data that are particularly small size from my anaylsis\n\ni.e. Weight(8 users) and heart rate(7 users)\n\n\n# 2. Documentation of any cleaning or manipulation of data\n\nFirst, I searched for duplicate files, such as Wide datas that have their own Narrow copies. I aligned all files to be of long data, as consistent with the main population of the other datasets. In addition, after briefly reviewing in Excel, I found out that half of the dataset are the same as others but converted to minutes instead of hourly. In order to stay consistent in my anaylyis, I will delete those that are minute versions, and measure only by hours and days(no duplicate copies). \nEventually, I am leaving these datasets\n  \n>   Daily Activities\n>   \n>   Hourly Calories\n>   \n>   Hourly Intensities\n>   \n>   Sleep Day\n>   \n>   Hourly Steps \n\n\nI will be using R to clean and manipulate the data after briefly reviewing in Excel","metadata":{}},{"cell_type":"markdown","source":"**1) Importing the datasets**\n> First, I will import several libraries that will come in use (graph, date,anaylsis,import files) later on. ","metadata":{}},{"cell_type":"code","source":"library(tidyr)\nlibrary(dplyr)\nlibrary(lubridate)\nlibrary(ggplot2)\nlibrary(janitor)\nlibrary(here)\nlibrary(readr)\nlibrary(skimr)","metadata":{"execution":{"iopub.status.busy":"2022-08-15T04:53:14.799021Z","iopub.execute_input":"2022-08-15T04:53:14.80061Z","iopub.status.idle":"2022-08-15T04:53:14.826448Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"I will import the five files from the input folder from kaggle, in the \"fitbit\" folder","metadata":{}},{"cell_type":"code","source":"daily_activity <- read_csv(file= \"../input/fitbit/Fitabase Data 4.12.16-5.12.16/dailyActivity_merged.csv\")\ndaily_sleep <- read_csv(file= \"../input/fitbit/Fitabase Data 4.12.16-5.12.16/sleepDay_merged.csv\")\nhourly_steps <- read_csv(\"../input/fitbit/Fitabase Data 4.12.16-5.12.16/hourlySteps_merged.csv\")\nhourly_intensities <- read_csv (\"../input/fitbit/Fitabase Data 4.12.16-5.12.16/hourlyIntensities_merged.csv\")\nhourly_calories <- read_csv (\"../input/fitbit/Fitabase Data 4.12.16-5.12.16/hourlyCalories_merged.csv\")","metadata":{"execution":{"iopub.status.busy":"2022-08-15T04:53:15.248777Z","iopub.execute_input":"2022-08-15T04:53:15.25094Z","iopub.status.idle":"2022-08-15T04:53:15.651519Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"**2) Clean the data**\n> **Then, I will check to see the summary of these datasets, using head() and str() to see if the structures and first few rows are correcly functioning.**","metadata":{}},{"cell_type":"code","source":"head(daily_activity)\nstr(daily_activity)\n\nhead(daily_sleep)\nstr(daily_sleep)\n\nhead(hourly_steps)\nstr(hourly_steps)\n\nhead(hourly_intensities)\nstr(hourly_intensities)\n\nhead(hourly_calories)\nstr(hourly_calories)","metadata":{"execution":{"iopub.status.busy":"2022-08-15T04:53:15.761674Z","iopub.execute_input":"2022-08-15T04:53:15.763259Z","iopub.status.idle":"2022-08-15T04:53:15.908745Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"The structure and first few rows don't seem to be problematic, thus we can move onto the next steps.","metadata":{}},{"cell_type":"markdown","source":"**I will also find the unique ids of each dataset, to see how many distinct users there are.**","metadata":{}},{"cell_type":"code","source":"n_unique(daily_activity$Id)\nn_unique(hourly_calories$Id)\nn_unique(hourly_intensities$Id)\nn_unique(hourly_steps$Id)\nn_unique(daily_sleep$Id)","metadata":{"execution":{"iopub.status.busy":"2022-08-15T04:53:16.00375Z","iopub.execute_input":"2022-08-15T04:53:16.005313Z","iopub.status.idle":"2022-08-15T04:53:16.043765Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"Daily sleep dataset only has 24 users, which supposedly will not exhibit strong significance, but as the dataset is necessary in producing the insights, we'll include the dataset for this case study.","metadata":{}},{"cell_type":"markdown","source":"**Next, we will check if there are duplicates data in each dataset**","metadata":{}},{"cell_type":"code","source":"sum(duplicated(daily_activity))\nsum(duplicated(hourly_calories))\nsum(duplicated(hourly_intensities))\nsum(duplicated(daily_sleep))\nsum(duplicated(hourly_steps))","metadata":{"execution":{"iopub.status.busy":"2022-08-15T04:53:16.192Z","iopub.execute_input":"2022-08-15T04:53:16.193636Z","iopub.status.idle":"2022-08-15T04:53:16.364232Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"We will drop the 3 duplicates of daily_sleep as seen in the previous step. Finding the distinct values of daily_sleep and then dropping the missing values(other duplicates), resulting in no duplicates","metadata":{}},{"cell_type":"code","source":"daily_sleep <- daily_sleep %>%\n  distinct() %>%\n  drop_na()","metadata":{"execution":{"iopub.status.busy":"2022-08-15T04:53:16.366637Z","iopub.execute_input":"2022-08-15T04:53:16.368069Z","iopub.status.idle":"2022-08-15T04:53:16.381808Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"check to verify there are no duplicates in the daily sleep dataset","metadata":{}},{"cell_type":"code","source":"sum(duplicated(daily_sleep))","metadata":{"execution":{"iopub.status.busy":"2022-08-15T04:53:16.664088Z","iopub.execute_input":"2022-08-15T04:53:16.665688Z","iopub.status.idle":"2022-08-15T04:53:16.682063Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"**Lastly, I will rename the values of all dataset to ensure consistency in the columns(all to lowercase) and that there are only characters, underscore, and numbers in the names.**","metadata":{}},{"cell_type":"code","source":"daily_activity<- rename_with(daily_activity, tolower)\n\ndaily_sleep <- rename_with(daily_sleep, tolower)\n\nhourly_steps <- rename_with(hourly_steps, tolower)\n\nhourly_calories <- rename_with(hourly_calories, tolower)\n\nhourly_intensities <- rename_with(hourly_intensities, tolower)\n\n\nclean_names(daily_activity)\nclean_names(daily_sleep)\nclean_names(hourly_steps)\nclean_names(hourly_calories)\nclean_names(hourly_intensities)","metadata":{"execution":{"iopub.status.busy":"2022-08-15T04:53:16.882507Z","iopub.execute_input":"2022-08-15T04:53:16.88432Z","iopub.status.idle":"2022-08-15T04:53:17.299893Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"**I will also ensure the consistency for the dates and time, transforming all the daily datasets to the format of year-month-day, and the hourly datasets to the format of year-month-day hour:minutes:second.**","metadata":{}},{"cell_type":"code","source":"daily_activity <- daily_activity %>%\n  rename(date = activitydate) %>%\n  mutate(date = as_date(date, format = \"%m/%d/%Y\"))","metadata":{"execution":{"iopub.status.busy":"2022-08-15T04:53:17.302217Z","iopub.execute_input":"2022-08-15T04:53:17.303565Z","iopub.status.idle":"2022-08-15T04:53:17.322695Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"glimpse(daily_activity)","metadata":{"execution":{"iopub.status.busy":"2022-08-15T04:53:17.326362Z","iopub.execute_input":"2022-08-15T04:53:17.328194Z","iopub.status.idle":"2022-08-15T04:53:17.352089Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"daily_sleep <- daily_sleep %>%\n  rename(date = sleepday) %>%\n  mutate(date = as_date(date,format =\"%m/%d/%Y %I:%M:%S %p\" , tz=Sys.timezone()))","metadata":{"execution":{"iopub.status.busy":"2022-08-15T04:53:17.401784Z","iopub.execute_input":"2022-08-15T04:53:17.40346Z","iopub.status.idle":"2022-08-15T04:53:17.427045Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"glimpse(daily_sleep)","metadata":{"execution":{"iopub.status.busy":"2022-08-15T04:53:17.568693Z","iopub.execute_input":"2022-08-15T04:53:17.570239Z","iopub.status.idle":"2022-08-15T04:53:17.588798Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"hourly_steps<- hourly_steps %>% \n  rename(date = activityhour) %>%\n  mutate(date = as.POSIXct(date,format =\"%m/%d/%Y %I:%M:%S %p\" , tz=Sys.timezone()))\n\nglimpse(hourly_steps)","metadata":{"execution":{"iopub.status.busy":"2022-08-15T04:53:17.738592Z","iopub.execute_input":"2022-08-15T04:53:17.740111Z","iopub.status.idle":"2022-08-15T04:53:17.787572Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"hourly_calories<- hourly_calories %>% \n  rename(date = activityhour) %>%\n  mutate(date = as.POSIXct(date,format =\"%m/%d/%Y %I:%M:%S %p\" , tz=Sys.timezone()))\n\nglimpse(hourly_calories)","metadata":{"execution":{"iopub.status.busy":"2022-08-15T04:53:17.91455Z","iopub.execute_input":"2022-08-15T04:53:17.916109Z","iopub.status.idle":"2022-08-15T04:53:17.965023Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"hourly_intensities<- hourly_intensities %>% \n  rename(date = activityhour) %>%\n  mutate(date = as.POSIXct(date,format =\"%m/%d/%Y %I:%M:%S %p\" , tz=Sys.timezone()))\n\nglimpse(hourly_intensities)","metadata":{"execution":{"iopub.status.busy":"2022-08-15T04:53:18.116776Z","iopub.execute_input":"2022-08-15T04:53:18.11835Z","iopub.status.idle":"2022-08-15T04:53:18.177757Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"# 3. Analysis ","metadata":{}},{"cell_type":"markdown","source":"For the anaylsis, I want to first segment the consumers into groups, then find the correlation between the intensities, calories, activities and sleep time. Specifically, \n\n> 1. Categorize the users to see the trends (what proportion of people exercise the most/least)\n> 2. Correlation between total steps vs calories(to see if people's steps per day attribute to their burnt calories), sleep vs. calories (to see if burning more calories/walkings can attribute to better sleep qualities), and sedentary minutes vs sleep (to see the trends of sedentary behaviors and sleep pattern)\n> 2. What time in the day people are more active using calories/steps. (reminding them to drink water, etc)\n> 3. Compare sleep and steps/calories to the recommeded health data to see if people are following the recommended healthy lifestyle.\n","metadata":{}},{"cell_type":"markdown","source":"**First, I will merge sleep data with daily activity to easily draw out the two columns to find the relationship between people's sleep schedule with their daily activities (calories, steps)**\n\nWe will also check if the people's behaviors are of the recommended patterns (sleep, steps, calories)\n\n> According to CDC, the recommended steps taken per day for an adult is 10,000 steps a day. and a 7 hours or more sleep time (we will measure using 8 hours), and calories of 2000.\n> We will thus graph a reference line in the scatterplot to see the data's position compared to the line.","metadata":{}},{"cell_type":"code","source":"daily_activity_sleep <- merge(daily_activity, daily_sleep, by=c (\"id\", \"date\"))\nglimpse(daily_activity_sleep)","metadata":{"execution":{"iopub.status.busy":"2022-08-15T04:53:18.283629Z","iopub.execute_input":"2022-08-15T04:53:18.285151Z","iopub.status.idle":"2022-08-15T04:53:18.318216Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"**1)  Correlation between steps and calories**","metadata":{}},{"cell_type":"code","source":"ggplot(data=daily_activity_sleep)+\ngeom_point(mapping=aes(x=totalsteps, y=totalminutesasleep))+\ngeom_smooth(mapping=aes(x=totalsteps,y=totalminutesasleep))+\ngeom_hline(yintercept = 480)+\ngeom_vline(xintercept=10000)+\nlabs(title = \"Average Steps vs. Average Minutes Asleep\", x=\"Average Steps\", y=\"Average Minutes Asleep\")","metadata":{"execution":{"iopub.status.busy":"2022-08-15T04:53:18.568988Z","iopub.execute_input":"2022-08-15T04:53:18.570558Z","iopub.status.idle":"2022-08-15T04:53:18.873093Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"> As seen in the above graph, there seems to be no correlation between the steps taken per day and the sleep behavior of one, indicating that there are no direct relationships between exercising the sleeping. Thus, we can drop the hypothesis that more exercises might lead to potential better sleep.\n> \n> \n> We also see that most data are under the recommended steps and sleep time.","metadata":{}},{"cell_type":"markdown","source":"**2) Correlation between steps and calories**","metadata":{}},{"cell_type":"code","source":"ggplot(data=daily_activity_sleep)+\ngeom_point(mapping=aes(x=totalsteps, y=calories))+\ngeom_smooth(mapping=aes(x=totalsteps,y=calories))+\ngeom_hline(yintercept = 2000)+\ngeom_vline(xintercept=10000)+\nlabs(title = \"Daily Steps vs. Daily Calories\", x=\"Daily Steps\", y=\"Daily Calories\")","metadata":{"execution":{"iopub.status.busy":"2022-08-15T04:53:18.877188Z","iopub.execute_input":"2022-08-15T04:53:18.879714Z","iopub.status.idle":"2022-08-15T04:53:19.194Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"> We see a trend of positive correlation between calories and steps, therefore indicating that people who walk more frequently during the day burn more calories compared to those who walk less. We can thus draw the recommendations for people to walk more as a way to exercise. \n> \n> Again, most data are under the recommended steps, but most are achieving the recommended carlories.","metadata":{}},{"cell_type":"markdown","source":"**3) Correlation between sedentary minutes and sleep minutes**","metadata":{}},{"cell_type":"code","source":"ggplot(data=daily_activity_sleep)+\ngeom_point(mapping=aes(x=sedentaryminutes, y=totalminutesasleep))+\ngeom_smooth(mapping=aes(x=sedentaryminutes,y=totalminutesasleep))+\ngeom_hline(yintercept = 480)+\nlabs(title = \"Sedentary Minutes vs. Minutes Asleep\", x=\"Sedentary Minutes\", y=\"Minutes Asleep\")","metadata":{"execution":{"iopub.status.busy":"2022-08-15T04:53:19.196218Z","iopub.execute_input":"2022-08-15T04:53:19.197591Z","iopub.status.idle":"2022-08-15T04:53:19.487755Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"> As we can see, there is an evident negative correlation between sedentary minutes and sleep time, indicating that the more you spend time sitting down, the less sleep time it is related to. We can thus make recommendations to remind people to sit down less, as it will improve the sleep time you will be getting.\n> \n> Most data are also not achieving the recommended sleep hours.","metadata":{}},{"cell_type":"markdown","source":"Next, I will categorize the users into subgroups, in which I will use steps taken to separate them (from Healthline)\n> Inactive: less than 5000 steps per day\n\n> Average: 7500-12500 steps per day\n\n> Very Active: more than 12500 steps per day","metadata":{}},{"cell_type":"code","source":"daily_average <- daily_activity_sleep %>%\n  group_by(id) %>%\n  summarise (mean_dailysteps = mean(totalsteps), mean_dailycalories = mean(calories), mean_dailysleep = mean(totalminutesasleep))\n\nhead(daily_average)","metadata":{"execution":{"iopub.status.busy":"2022-08-15T04:53:19.492455Z","iopub.execute_input":"2022-08-15T04:53:19.495056Z","iopub.status.idle":"2022-08-15T04:53:19.53917Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"user_type <- daily_average %>%\n  mutate(user_type = case_when(\n    mean_dailysteps < 5000 ~ \"Inactive\",\n    mean_dailysteps >= 5000 & mean_dailysteps < 12500 ~ \"Average\", \n    mean_dailysteps >= 12500 ~ \"Very Active\"\n  ))\nhead(user_type)","metadata":{"execution":{"iopub.status.busy":"2022-08-15T04:53:19.541724Z","iopub.execute_input":"2022-08-15T04:53:19.543123Z","iopub.status.idle":"2022-08-15T04:53:19.571841Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"user_type_percent <- user_type %>%\n  group_by(user_type) %>%\n  summarise(total = n()) %>%\n  mutate(totals = sum(total)) %>%\n  group_by(user_type) %>%\n  summarise(total_percent = total / totals) %>%\n  mutate(labels = scales::percent(total_percent))\n\nuser_type_percent$user_type <- factor(user_type_percent$user_type , levels = c(\"Very Active\", \"Inactive\", \"Average\"))\n\n\nhead(user_type_percent)","metadata":{"execution":{"iopub.status.busy":"2022-08-15T04:53:19.574139Z","iopub.execute_input":"2022-08-15T04:53:19.575516Z","iopub.status.idle":"2022-08-15T04:53:19.618708Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"user_type_percent %>%\n  ggplot(aes(x=\"\",y=total_percent, fill=user_type)) +\n  geom_bar(stat = \"identity\", width = 1)+\n  coord_polar(\"y\", start=0)+\n  theme_minimal()+\n  theme(axis.title.x= element_blank(),\n        axis.title.y = element_blank(),\n        panel.border = element_blank(), \n        panel.grid = element_blank(), \n        axis.ticks = element_blank(),\n        axis.text.x = element_blank(),\n        plot.title = element_text(hjust = 0.5, size=14, face = \"bold\")) +\n  scale_fill_manual(values = c(\"Blue\",\"Red\", \"Green\", \"Yellow\")) +\n  geom_text(aes(label = labels),\n            position = position_stack(vjust = 0.5))+\n  labs(title=\"User types\")","metadata":{"execution":{"iopub.status.busy":"2022-08-15T04:53:19.6209Z","iopub.execute_input":"2022-08-15T04:53:19.622172Z","iopub.status.idle":"2022-08-15T04:53:19.912077Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"**Thirdly, I will measure what times in the day people tend to be more active in regards to their steps taken, calories burnt and intensities**","metadata":{}},{"cell_type":"markdown","source":"> I will be separating the date column into specific hourly measurement as we will only be using the hours. ","metadata":{}},{"cell_type":"code","source":"glimpse(hourly_steps)\nhourly_steps <- hourly_steps %>%\n  separate(date, into = c(\"date\", \"hours\"), sep= \" \") %>%\n  mutate(date = ymd(date)) \n  \nhead(hourly_steps)","metadata":{"execution":{"iopub.status.busy":"2022-08-15T04:53:19.914431Z","iopub.execute_input":"2022-08-15T04:53:19.915832Z","iopub.status.idle":"2022-08-15T04:53:20.378138Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"> Then, I will be creating a bar chart plotting down the mean steps taken in the span of a day, so we will clearly see which bar is the highest(most steps taken)","metadata":{}},{"cell_type":"code","source":"hourly_steps %>%\n  group_by(hours) %>%\n  summarize(average_steps = mean(steptotal)) %>%\n  ggplot() +\n  geom_col(mapping = aes(x=hours, y = average_steps, fill = average_steps)) + \n  labs(title = \"Hourly steps throughout the day\", x=\"time in the day\", y=\"average steps\") + \n  theme(axis.text.x = element_text(angle = 90))","metadata":{"execution":{"iopub.status.busy":"2022-08-15T04:53:20.381656Z","iopub.execute_input":"2022-08-15T04:53:20.383174Z","iopub.status.idle":"2022-08-15T04:53:20.691692Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"> We see that between 11:00-13:00 and 14:00-19:00 are the highest","metadata":{}},{"cell_type":"markdown","source":"**We will do the same for measuring calories**","metadata":{}},{"cell_type":"code","source":"glimpse(hourly_calories)\nhourly_calories <- hourly_calories %>%\n  separate(date, into = c(\"date\", \"hours\"), sep= \" \") %>%\n  mutate(date = ymd(date)) \n  \nhead(hourly_calories)","metadata":{"execution":{"iopub.status.busy":"2022-08-15T04:53:20.695083Z","iopub.execute_input":"2022-08-15T04:53:20.696508Z","iopub.status.idle":"2022-08-15T04:53:21.142568Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"hourly_calories %>%\n  group_by(hours) %>%\n  summarize(average_calories= mean(calories)) %>%\n  ggplot() +\n  geom_col(mapping = aes(x=hours, y = average_calories, fill = average_calories)) + \n  labs(title = \"Hourly calories throughout the day\", x=\"time in the day\", y=\"average calories\") + \n  theme(axis.text.x = element_text(angle = 90))","metadata":{"execution":{"iopub.status.busy":"2022-08-15T04:53:21.147072Z","iopub.execute_input":"2022-08-15T04:53:21.148793Z","iopub.status.idle":"2022-08-15T04:53:21.455419Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"> Calories are the highest between 16:00-19:00","metadata":{}},{"cell_type":"markdown","source":"We will also measure the intensities hours throughout the day.","metadata":{}},{"cell_type":"code","source":"glimpse(hourly_intensities)\nhourly_intensities <- hourly_intensities %>%\n  separate(date, into = c(\"date\", \"hours\"), sep= \" \") %>%\n  mutate(date = ymd(date)) \n  \nhead(hourly_intensities)","metadata":{"execution":{"iopub.status.busy":"2022-08-15T04:53:21.459406Z","iopub.execute_input":"2022-08-15T04:53:21.46089Z","iopub.status.idle":"2022-08-15T04:53:21.902427Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"hourly_intensities %>%\n  group_by(hours) %>%\n  summarize(average_intensity = mean(totalintensity)) %>%\n  ggplot() +\n  geom_col(mapping = aes(x=hours, y = average_intensity, fill = average_intensity)) + \n  labs(title = \"Hourly intensities throughout the day\", x=\"time in the day\", y=\"average intensities\") + \n  theme(axis.text.x = element_text(angle = 90))","metadata":{"execution":{"iopub.status.busy":"2022-08-15T04:53:21.904767Z","iopub.execute_input":"2022-08-15T04:53:21.906125Z","iopub.status.idle":"2022-08-15T04:53:22.24166Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"It can be seen that the highest intensities throughout the day is around 17:00-19:00","metadata":{}},{"cell_type":"markdown","source":"# Conclusion:\nwe are able to conclude from the above findings and apply strategies in accordance that\n1. The majority of the users lie in average active lifestyle, with the. lowest in very active. Thus, we can apply different strategies to different groups, such as sending more recommendations to inactive groups. \n2. There is a negative correlation between the sedentary minutes and sleep hours. We can apply recommendations to the sedentary lifestyle people, reminding them to stand up and walk more, or reminding them to sleep when they are lying down, as it will improve their sleep patterns. \n3. There is a positive correlation between steps taken and calories burnt, thus we can recommend the less active lifestyle users to walk more as a less intensive way of burning calories. \n4. In general, people burn more calories/walk more/involve in more intensive activites during 16:00-19:00. We can thus set reminders during this time reminding users to drink more water or other tips to assist with their exercising","metadata":{}}]}
